Problem Statement:

The Tribonacci sequence Tn is defined as follows: 
T0 = 0, T1 = 1, T2 = 1, and Tn+3 = Tn + Tn+1 + Tn+2 for n >= 0.
Given n, return the value of Tn.

Approach:

1.Like Fibonacci, but each number is the sum of the last 3 numbers.
Formula: 
     T(0) = 0
     T(1) = 1
     T(2) = 1
     T(n) = T(n-1) + T(n-2) + T(n-3) for n >= 3.
2. Initialization: Start with base array: T = [0, 1, 1].
3. Iteration: From i = 3 up to n: Compute T[i] = T[i-1] + T[i-2] + T[i-3].
4. Return T[n].

Dry Run: 

n = 5
T = [0, 1, 1]

* i = 3 → T[3] = T[2] + T[1] + T[0] = 1 + 1 + 0 = 2
  → T = [0, 1, 1, 2]

* i = 4 → T[4] = T[3] + T[2] + T[1] = 2 + 1 + 1 = 4
  → T = [0, 1, 1, 2, 4]

* i = 5 → T[5] = T[4] + T[3] + T[2] = 4 + 2 + 1 = 7
  → T = [0, 1, 1, 2, 4, 7]

Final Output: T[5] = 7