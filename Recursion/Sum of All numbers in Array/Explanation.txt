Problem Statement:

Write a function sum(n) that calculates the sum of all numbers in an array arr using recursion. 
It sums from index 0 to n. 

Approach:

* To calculate the sum of an array using recursion.
* If n == 0, return arr[0].
* Return arr[n] + sum(arr, n-1).
* The function keeps breaking the problem into smaller subproblems until it reaches the base case.
* Start from the last element, keep adding backwards until reaching the first element.

Dry Run:

let arr = [5, 2, 6, 1, 3];
console.log(sum(arr.length - 1)); -> sum(4)

Initial call → sum(4)

  * n === 0 -> False
  * return arr[4] + sum(3) → 3 + sum(3)

* sum(3)

  * n === 0-> False
  * return arr[3] + sum(2) → 1 + sum(2)
 
* sum(2) 

  * n === 0 -> False
  * return arr[2] + sum(1) → 6 + sum(1)

* sum(1)
  * n === 0-> False
  * return arr[1] + sum(0) → 2 + sum(0)

* sum(0)
   n === 0 ? return arr[0] → 5

sum(0) → 5
sum(1) → 2 + 5 = 7
sum(2) → 6 + 7 = 13
sum(3) → 1 + 13 = 14
sum(4) → 3 + 14 = 17

Final Output: 17