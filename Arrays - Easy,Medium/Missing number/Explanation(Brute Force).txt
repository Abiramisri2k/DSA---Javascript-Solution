Problem Statement:

Given an array nums containing n distinct numbers in the range [0, n], 
return the only number in the range that is missing from the array.

Approach:

1. Sort the array
2. Loop from index 1 to n - 1
3. If nums[i] != nums[i-1] + 1, return nums[i-1] + 1
4. If no mismatch is found:
   • If nums[0] != 0, return 0
   • Else return n

Dry Run:

input: nums = [3, 0, 1]

Sort the array

nums.sort((a, b) => a - b);
nums = [0, 1, 3]


Check if first element is `0`

if (nums[0] !== 0) return 0;
nums[0] = 0 → condition false → continue

Loop starts at i = 1:

i = 1 → compare nums[1] with nums[0] + 1

  * nums[1] = 1
  * nums[0] + 1 = 0 + 1 = 1
    Equal → continue

i = 2 → compare nums[2] with nums[1] + 1

  * nums[2] = 3
  * nums[1] + 1 = 1 + 1 = 2
    Not equal → return nums[1] + 1 = 2


Return missing number

Output → 2



