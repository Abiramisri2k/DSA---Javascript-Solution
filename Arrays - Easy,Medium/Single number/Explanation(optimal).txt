Problem Statement:

You are given a non-empty array of integers where every element appears exactly twice, except for one element that appears only once. 
The task is to find that unique element. The solution should work in linear time and use only constant extra space.

Approach:

* XOR of two same numbers is 0: a ^ a = 0
* XOR of a number with 0 is the number itself: a ^ 0 = a
* So, if all elements occur twice except one, XOR-ing all gives that unique number.

Dry run:

Input:

nums = [4, 1, 2, 1, 2]

Initialize: xor = 0

Loop through nums
* i = 0 → num = 4
  xor = 0 ^ 4 = 4

* i = 1 → num = 1
  xor = 4 ^ 1 = 5

* i = 2 → num = 2
  xor = 5 ^ 2 = 7

* i = 3 → num = 1
  xor = 7 ^ 1 = 6

* i = 4 → num = 2
  xor = 6 ^ 2 = 4

Final result: xor = 4

Output: 4
